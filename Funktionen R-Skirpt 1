## Hier sind die Punkte a-f aus Aufgabe 3. 



## (a) verschiedene deskriptive Statistiken für metrische Variablen

met.deskstat <- function(df){
  
  #Hilfsfunktion gibt Spalten mit metrischen Variablen aus
  x <- m.var(df)
  
  #dataframe mit statistischen Werten
  m.variablen <- data.frame(
    mean = sapply(df[,x], mean),
    Quantil1 =  sapply(df[,x], function(df) quantile(df, 0.25)),
    Quantil2 =  sapply(df[,x], function(df) quantile(df, 0.75)),
    sd = round(sapply(df[,x], sd), 3),
    Varianz = round(sapply(df[,x], var), 3),
    Variationskoeff = sapply(df[,x], function(y) round((sd(y)/mean(y)*100),2))
  )
  rownames(m.variablen) <- colnames(df[,x])
  print(m.variablen)
}



## (b) verschiedene deskriptive Statistiken für kategoriale Variablen

#Hilfsfunktion gibt an, welche Spalten kategorial sind
k.var(df)

kat.deskstat <- function(df, k){         
# df = dataframe, k = Spalte mit kategorialen Variablen, welches man mit k.var berechnen kann
  
# Haeufigiskeitstabellen
  x <- table(df[,k])
  y <- prop.table(x)
  z <- cumsum(table(df[,k]))
  liste <- cbind("abs. Haeufigkeit" = x, "rel. Haeufig." = y, "kumulierte Haeufigkeit" = z)
  print(liste)
}



# (c) Eine Funktion, die geeignete deskriptive bivariate Statistiken fuer den Zusammenhang zwischen zwei kategorialen Variablen berechnet ausgibt.

cat_summary <- function(df, var1, var2){
  
  # Zuerst machen wir eine Kreuztabelle
  kreuz_tab <- table(df[[var1]], df[[var2]])
  
  # Absolute und relative Häufigkeiten
  abs <- addmargins(kreuz_tab)
  rel <- prop.table(abs)
  
  # Für erste Variable
  var1_lev <- levels(df[[var1]])
  var1_coun <- table(df[[var1]])
  var1_perc <- round(prop.table(var1_coun)*100, 1)
  
  # Für zweite Variable 
  var2_lev <- levels(df[[var2]])
  var2_coun <- table(df[[var2]])
  var2_perc <- round(prop.table(var2_coun)*100, 1)
  
  # Herausgaben
  cat(paste("Kreuztabelle:\n"))
  print(kreuz_tab)
  cat("\n")
  
  cat(paste("Absolute Häufigkeiten:\n"))
  print(abs)
  cat("\n")
  
  cat(paste("Relative Häufigkeiten:\n"))
  print(rel)
  cat("\n")
  
  cat(paste("Deskriptive Statistiken fuer", var1, ":\n"))
  for(i in 1:length(var1_lev)){
    cat(paste(var1_lev[i], ": ", var1_coun[i], " (", var1_perc[i], "%)\n", sep = ""))
  }
  cat("\n")
  
  cat(paste("Deskriptive Statistiken fuer", var2, ":\n"))
  for(i in 1:length(var2_lev)){
    cat(paste(var2_lev[i], ": ", var2_coun[i], " (", var2_perc[i], "%)\n", sep = ""))
  }
  
}

#Beispiel fuer Studienfach und Interesse an Mathematik
cat_summary(df, "Studienfach", "Interesse an Mathe")



# (d) Eine Funktion, die geeignete deskriptive bivariate Statistiken für den Zusammengang zwischen metrischen und dichotomen Variablen berechnet und ausgibt.
 
D <- function(daten, var1, var2) {
  t <- t.test(daten[[var1]] ~ daten[[var2]])
  stats <- c(t$estimate, t$p.value)
  names(stats) <- c("mean in group FALSE","mean in group TRUE ","p-value")
  return(stats)
}



# (e) Eine Funktion, die eine mindestens ordinal skalierte Variable quantilbasiert kategorisiert (z.B. in „niedrig“, „mittel“, „hoch“).

E <- function(df, var, cutoffs) {
  category <- cut(df[[var]], cutoffs, include.lowest = TRUE, labels = c("Low", "Medium", "High"))
  return(category)
}


# (f) Eine Funktion, die eine geeignete Visualisierung von drei oder vier kategorialen Variablen erstellt.

Visualisierung <- function(data, var1, var2, var3 = NULL, var4 = NULL) {
  if (!is.null(var4)) {
    plot <- ggplot(data, aes(x = var1, fill = var2)) + 
      geom_bar(position = "dodge") +
      facet_wrap(vars(var3, var4))
  } else if (!is.null(var3)) {
    plot <- ggplot(data, aes(x = var1, fill = var2)) + 
      geom_bar(position = "dodge") +
      facet_wrap(var3)
  } else {
    plot <- ggplot(data, aes(x = var1, fill = var2)) + 
      geom_bar(position = "dodge")
  }
  return(plot)
}

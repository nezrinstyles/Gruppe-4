## Aufgabe 4: Yuxin Zhuang, Minghong Qi und Yajie Zhang

## a)

source("WA github.R")
install.packages("tidyverse")
library(tidyverse)
getwd()
setwd("/Users/qihongming/Desktop/a) .R")
getwd()

data = read.csv("datensatz.csv")
data

compute_scale_stats_neu = function(data, var){
  if(varuseful_a(data,var)==TRUE){
    return(A(data, var))
  }
  else{
    return("var falsh eingeben")
  }
} 

funk=compute_scale_stats_neu(data, 1)
for(i in c(2,4,5,6)){
  funk=rbind(funk,compute_scale_stats_neu(data, i))
}
funk=data.frame(funk)
rownames(funk)=c("ID","age","interest_math","interest_program","maths_LK")
#B=data.frame(t(fun))
funk

x <- c('mean','median','sd','min','max')
y <- c(50.50,50.5,29.0114920,1,100)
df <- data.frame(x = x, y = y)
p1 = ggplot(data = df, mapping = aes(x = x, y = y)) + 
  geom_bar(stat = 'identity') +
  labs(title='ID')

x <- c('mean','median','sd','min','max')
y <- c(25.21,25.0,1.8107145,20,29)
df <- data.frame(x = x, y = y)
p2 = ggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = 'identity')+
  labs(title='Age')

x <- rep(c('mean','median','sd','min','max'),times = 3)
x
y <- rep(c('interest_math','interest_program','maths_LK'),each = 5)
y
z = NULL
k = 1
for(i in 3:5){
  for(j in 1:5){
    z[k] = funk[i,j]
    k = k+1
  }
}
z
df <- data.frame(x = x, y = y, z = z)
df
p3 = ggplot(data = df, mapping = aes(x = factor(x), y = z, fill = y)) + 
  geom_bar(stat = 'identity', position = 'dodge')+
  labs(title='interest_math + interest_program + maths_LK')

plot_grid(p1, p2, p3, labels = LETTERS[1:3], ncol = 2)

#b
compute_cat_stats_neu <- function(data, var) {
  if(varuseful(data, var)==TRUE){
    return(B(data, var))
  }
  else{
    return("var falsh eingeben")
  }
}

a=data.frame(c(20:30),compute_cat_stats_neu(data,2)[,1])
colnames(a)=c("age","freq")
a
b=data.frame(c('Computer','Data','Maths','Statistics'),
             compute_cat_stats_neu(data,3)[,1])
colnames(b)=c("subject","freq")
b
c=data.frame(c(1:7),compute_cat_stats_neu(data,4)[,1])
colnames(c)=c("interest_math","freq")
c
d=data.frame(c(1:7),compute_cat_stats_neu(data,5)[,1])
colnames(d)=c("interest_programming","freq")
d
e=data.frame(c("FALSE","TRUE"),compute_cat_stats_neu(data,6)[,1])
colnames(e)=c("maths_LK","freq")
e

p1 = ggplot(data = a, mapping = aes(x = a[,1], y = a[,2])) + 
  geom_bar(stat = 'identity') + labs(x="age",y="freq")
p2 = ggplot(data = b, mapping = aes(x = b[,1], y = b[,2])) + 
  geom_bar(stat = 'identity') + labs(x="subject",y="freq")
p3 = ggplot(data = c, mapping = aes(x = c[,1], y = c[,2])) + 
  geom_bar(stat = 'identity') + labs(x="interest_math",y="freq")
p4 = ggplot(data = d, mapping = aes(x = d[,1], y = d[,2])) + 
  geom_bar(stat = 'identity') + labs(x="interest_programming",y="freq")
p5 = ggplot(data = e, mapping = aes(x = e[,1], y = e[,2])) + 
  geom_bar(stat = 'identity') + labs(x="maths_LK",y="freq")

plot_grid(p1, p2, p3, p4, p5, labels = LETTERS[1:5], ncol = 2)

#c
compute_cat_assoc_stats_neu = function(data, var1, var2) {
  if(varuseful(data,var1) == TRUE & varuseful(data,var2) == TRUE){
    if(var_gleich(var1,var2) == TRUE){
      C(data, var1, var2)
    }
    else{
      return("var1 und var2 muss ungleich sein")
    }
  }
  else{
    return("var falsh eingeben")
  }
}

compute_cat_assoc_stats_neu(data, 2,3)



#d
compute_scale_dichotomous_assoc_stats_neu = function(data, var1, var2){
  if(varuseful(data, var1) == TRUE & varuseful(data, var2) == TRUE){
    if(var_gleich(var1,var2) == TRUE){
      if(var_t(data,var1,var2) == TRUE){
        D(data, var1, var2)
      }
      else{
        return("var1 muss als numeric and var2 muss als logical")
      }
    }
    else{
      return("var1 und var2 muss ungleich sein")
    }
  }
  else{
    return("var falsh eingeben")
  }
}

a=cbind(compute_scale_dichotomous_assoc_stats_neu(data, 2, 6),
        compute_scale_dichotomous_assoc_stats_neu(data, 4, 6),
        compute_scale_dichotomous_assoc_stats_neu(data, 5, 6))
colnames(a)=c("age","interest_math","interest_programming")
a

x <- c('mean in group FALSE','mean in group TRUE','p-value')
y <- c(25.1086957,25.2962963,0.6084578)
df <- data.frame(x = x, y = y)
p1 = ggplot(data = df, mapping = aes(x = x, y = y)) + geom_bar(stat = 'identity')+
  labs(title='Age')

x <- rep(c('mean in group FALSE','mean in group TRUE','p-value'),each = 2)
x
y <- rep(c('interest_math','interest_program'),times = 3)
y
z = NULL
k = 1
for(i in 1:3){
  for(j in 2:3){
    z[k] = a[i,j]
    k = k+1
  }
}
z
df <- data.frame(x = x, y = y, z = z)
df
p2 = ggplot(data = df, mapping = aes(x = factor(x), y = z, fill = y)) + 
  geom_bar(stat = 'identity', position = 'dodge')+
  labs(title='interest_math and interest_program in T-test')

plot_grid(p1, p2, labels = LETTERS[1:2], ncol = 2)


#e
categorize_ordinal_var_neu <- function(data, var) {
  if(var_n(data,var)==TRUE){
    return(E(data, var))
  }
  else{
    return("var muss als numeric eingeben")
  }
}

categorize_ordinal_var_neu(data, 2)

